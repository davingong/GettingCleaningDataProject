f[13,4]
mergeddata$X.4 <- as.numeric(mergeddata$X.4)
str(mergeddata)
z<-mergeddata %>% arrange(X.4)
z[13,4]
x<- arrange(mergeddata,X.4)
View(x)
View(gdp)
View(mergeddata)
mergeddata2<-merge(gdp, stats, by.x = "X", by.y = "CountryCode")
View(mergeddata2)
str(mergeddata2)
mergeddata2$X.4<-as.character(mergeddata2$X.4)
View(mergeddata2)
mergeddata2$X.4<-as.numeric(mergeddata2$X.4)
arrange(gdp, X.4)
gdp2 <-arrange(gdp, X.4)
gdp2[13]
gdp2[13,1]
gdp$X.4<-as.numeric(as.character(gdp$X.4))
View(gdp2)
View(gdp)
View(gdp2)
gdp2$X.4<- as.numeric(levels(gdp2$X.4))[gdp2$X.4]
gdp <- read.csv("gdp.csv", skip = 4, nrows=190)
gdp <- read.csv("gdp.csv", skip = 4, nrows=190, stringsAsFactors = FALSE)
gdp2$X.4<- as.numeric(gdp2$X.4)
gdp$X.4<- as.numeric(gdp$X.4)
View(gdp)
gdp <- read.csv("gdp.csv", skip = 4, nrows=190, stringsAsFactors = FALSE)
gdp$X.4 <- extract_numeric(gdp, gdp$X.4)
?extract_numeric
parse_number(gdp$X.4)
gdp$X.4 <- parse_number(gdp$X.4)
gdp2 <-arrange(gdp, X.4)
gdp2[13,1]
gdp2[13,4]
View(gdp2)
View(gdp2)
View(mergeddata2)
mergeddata3<-merge(gdp2, stats, by.x = "X", by.y = "CountryCode")
View(mergeddata3)
mergeddata3 <- group_by(mergeddata3, Income.Group)
summarize(mergeddata3, mean(X.1))
?cut
cut(mergeddata3, 5)
summarize(mergeddata3, quantile)
summarize(mergeddata3, quantile(X.1))
summarize(mergeddata3, quantile(X.1, probs = (0.5, 0.7)))
summarize(mergeddata3, quantile(X.1, probs = (0.5)))
summarize(mergeddata3, quantile(X.1, probs = seq(0:1, 5))
)
summarize(mergeddata3, quantile(X.1, probs = seq(0:1, 5)))
seq(0:1, 5)
seq(1:5)
seq_along(5)
seq_along(1:5)
?seq
seq(0, 1, length.out = 5)
summarize(mergeddata3, quantile(X.1, probs = seq(0, 1, length.out = 5))
)
summarize(mergeddata3, quantile(X.1, probs = seq(0, 1, length.out = 5)))
summarize(mergeddata3, quantile(X.1, probs = c(0, 0.25))
)
summarize(mergeddata3, quantile(X.1, probs = 0.25)
)
summarize(mergeddata3, quantile(X.1, probs = 0.25), mean(X.1))
cut(mergeddata3)
cut(mergeddata3$X.4)
cut(mergeddata3$X.4, break = 5)
?cut
cut(mergeddata3$X.4, breaks = 5)
cut(mergeddata3$X.1, breaks = 5)
q <- (mergeddata3$X.1, breaks = 5)
q<- cut(mergeddata3$X.1, breaks = 5)
q
table(mergeddata3$Income.Group, q)
list1 <- list(c(1,2,3), c(7,8,9))
list1[1]
list1[[1]]
list1[[1,1]]
list1[[1]][2]
list1[1][2]
list1 <- list(fork = c(1,2,3), spoon = c(7,8,9))
list1$fork[1]
df<-data.frame(c(1,2,3,4))
df
df<-data.frame(horse =c(1,2,3,4), cat = c(7,56,6,7))
df
df[,"cat"]
cat+2
df+2
mean(df)
lapply(df, mean)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
now()
this_moment <- now()
this_moment
hour(this_moment)
ymd("1998-05-17")
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy(March 12, 1985)
mdy("March 12, 1985")
mdy("March 12, 1975")
dmy(25081975)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
hms(dt2)
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0
)
this_moment
nyc <- now(tzon = "America/New York")
nyc <- now(tzone = "America/New York")
nyc <- now("America/New York")
nyc <- now("America/New_York")
nyc
nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("./UCI HAR Dataset/test")
read.table("subject_test.txt")
subject_test <- read.table("subject_test.txt")
head(subject_test)
read.table("X_test.txt")
x_test <- read.table("X_test.txt")
head(x_test)
View(x_test)
y_test <- read.table("y_test.txt")
View(y_test)
View(subject_test)
View(subject_test)
View(x_test)
setwd(".//")
setwd(".//")
setwd(..)
setwd("..")
features <- read.table("features.txt")
View(features)
al <- read.table("activity_labels.txt")
View(al)
View(features)
class(features)
setwd("./train")
subject_train <- read.table("subject_train.txt")
x_train <- read.table("X_train.txt")
y_train <- read.table("y_train.txt")
View(y_train)
View(y_test)
View(x_train)
View(subject_train)
View(features)
View(subject_test)
View(al)
View(y_train)
summary(y_train)
str(y_train)
range(y_train)
View(al)
activitylabels <- al
rm(list = al)
rm(list = "al")
names(features)
head(features)
View(features)
setwd("./UCI HAR Dataset")
setwd("~UCI HAR Dataset")
setwd("..")
setwd("~/UCI HAR Dataset")
setwd("~/UCI HAR Dataset")
setwd("..")
setwd("~/UCI HAR Dataset")
setwd("/UCI HAR Dataset")
setwd("./UCI HAR Dataset")
load("C:/Users/Davin/datasciencecoursera/UCI HAR Dataset/.RData")
activity_labels <- activitylabels
rm(ls = "activitylabels")
summary(subject_train)
summary(subject_test)
View(y_test)
library(dplyr)
test <- bind_cols(subject_test, y_test, x_test)
View(test)
names(x_test) <- features[2]
View(x_test)
head(features)
features[2]
View(x_test)
names(x_test)
names(x_test)<-c(1,2,3)
x_test
View(x_test)
names(x_test) <- features[[2]]
rename(y_test, features[[2]])
?rename
variables <- features[[2]]
rename(y_test, variables)
df <- data.frame(C(1,2), c(2,3), c(3,4))
df <- data.frame(C(1,2,4,5,
)
df <- data.frame(C(1,2,4,5))
df <- data.frame(c(1,2,4,5))
df
df <- data.frame(c(1,2,4,5), rnorm(4))
df
rename(df, c(one, two))
rename(df, c("one", "two"))
names(df)<-c("one","two")
rename(df, one = first)
rename(df, "one" = "first")
rename(df, first = one)
View(x_test)
names(x_train) <- features[[2]]
View(x_train)
test <- bind_cols(subject_test, y_test, x_test)
View(test)
View(activity_labels)
View(y_test)
colnames(y_test)
y_test1 <- merge(y_test, activity_labels, by.x = "V1", by.y = "V1")
View(y_test1)
head(y_test1)
?merge
y_test1 <- merge(y_test, activity_labels, by.x = "V1", by.y = "V1", sort = FALSE)
View(y_test1)
names(y_test) <- c("Number", "activity")
names(y_test) <- c("number")
names(activity_labels) <- c("number", "activity")
View(y_test)
View(activity_labels)
names(subject_test) <- "subject"
names(subject_train) <- "subject"
View(subject_test)
View(y_test1)
test <- bind_cols(subject_test, y_test1[[2]], x_test)
View(test)
View(y_test1)
head(y_test1[[2]])
head(y_test1[2])
test <- bind_cols(subject_test, y_test1[2], x_test)
View(y_test)
View(test)
activity_labels <- read.table("activity_labels.txt")
features <- read.table("features.txt")
## Read in test files from test folder
setwd("./test")
subject_test <- read.table("subject_test.txt")
x_test <- read.table("X_test.txt")
y_test <- read.table("y_test.txt")
setwd("..")
## Read in train files from train folder
setwd("/train")
subject_train <- read.table("subject_train.txt")
x_train <- read.table("X_train.txt")
y_train <- read.table("y_train.txt")
setwd("..")
## Rename variables to be descriptive
names(x_test) <- features[[2]]
names(x_train) <- features[[2]]
names(y_test) <- c("number")
names(y_train) <- c("number")
names(activity_labels) <- c("number", "activity")
names(subject_test) <- "subject"
names(subject_train) <- "subject"
## Bind all datasets together
y_test_labeled <- merge(y_test, activity_labels, by.x = "number", by.y = "number", sort = FALSE)
y_train_labeled <- merge(y_train, activity_labels, by.x = "number", by.y = "number", sort = FALSE)
test <- bind_cols(subject_test, y_test_labeled[2], x_test)
train <- bind_cols(subject_train, y_train_labeled[2], x_train)
setwd("./UCI HAR Dataset")
activity_labels <- read.table("activity_labels.txt")
features <- read.table("features.txt")
## Read in test files from test folder
setwd("./test")
subject_test <- read.table("subject_test.txt")
x_test <- read.table("X_test.txt")
y_test <- read.table("y_test.txt")
setwd("..")
## Read in train files from train folder
setwd("/train")
subject_train <- read.table("subject_train.txt")
x_train <- read.table("X_train.txt")
y_train <- read.table("y_train.txt")
setwd("..")
## Rename variables to be descriptive
names(x_test) <- features[[2]]
names(x_train) <- features[[2]]
names(y_test) <- c("number")
names(y_train) <- c("number")
names(activity_labels) <- c("number", "activity")
names(subject_test) <- "subject"
names(subject_train) <- "subject"
## Bind all datasets together
y_test_labeled <- merge(y_test, activity_labels, by.x = "number", by.y = "number", sort = FALSE)
y_train_labeled <- merge(y_train, activity_labels, by.x = "number", by.y = "number", sort = FALSE)
test <- bind_cols(subject_test, y_test_labeled[2], x_test)
train <- bind_cols(subject_train, y_train_labeled[2], x_train)
setwd("./UCI HAR Dataset")
activity_labels <- read.table("activity_labels.txt")
features <- read.table("features.txt")
## Read in test files from test folder
setwd("./test")
subject_test <- read.table("subject_test.txt")
x_test <- read.table("X_test.txt")
y_test <- read.table("y_test.txt")
setwd("..")
## Read in train files from train folder
setwd("./train")
subject_train <- read.table("subject_train.txt")
x_train <- read.table("X_train.txt")
y_train <- read.table("y_train.txt")
setwd("..")
## Rename variables to be descriptive
names(x_test) <- features[[2]]
names(x_train) <- features[[2]]
names(y_test) <- c("number")
names(y_train) <- c("number")
names(activity_labels) <- c("number", "activity")
names(subject_test) <- "subject"
names(subject_train) <- "subject"
## Bind all datasets together
y_test_labeled <- merge(y_test, activity_labels, by.x = "number", by.y = "number", sort = FALSE)
y_train_labeled <- merge(y_train, activity_labels, by.x = "number", by.y = "number", sort = FALSE)
test <- bind_cols(subject_test, y_test_labeled[2], x_test)
train <- bind_cols(subject_train, y_train_labeled[2], x_train)
View(test)
View(train)
View(x_test)
View(y_test)
View(activity_labels)
View(x_test)
View(y_test)
View(subject_test)
dataset <- bind_rows(test, train)
View(dataset)
View(test)
View(dataset)
select(dataset, contains(c("std","mean")))
select(dataset, contains("mean"))
ds2<-select(dataset, contains("mean"), contains("std"))
View(ds2)
ds2<-select(dataset, 1:2, contains("mean"), contains("std"))
View(ds2)
colnames(ds2)
grep("mean", names(ds2))
grep("mean|[^Freq]", names(ds2))
grep("mean&[^Freq]", names(ds2))
grep("mean|std", names(ds2))
?grep
grep("mean[^Freq]", names(ds2))
grep("[mean][std][^Freq][^angle]", names(ds2))
grep("[mean][^Freq][^angle]", names(ds2))
grep("[mean std][^Freq][^angle]", names(ds2))
grep("[mean][^Freq][^angle]", names(ds2))
grep("[mean][^angle]", names(ds2))
grep("mean[^angle]", names(ds2))
grep("mean std[^Freq][^angle]", names(ds2))
grep("meanstd[^Freq][^angle]", names(ds2))
grep("mean|std[^Freq][^angle]", names(ds2))
selectvar <- grep("mean|std[^Freq][^angle]", names(ds2))
ds3<-select(ds2, selectvar)
View(ds3)
grep("mean|std[^freq][^angle]", names(ds2))
grep("mean|std[^Freq]|[^angle]", names(ds2))
grep("mean|std|[^Freq]|[^angle]", names(ds2))
grep("mean[^Freq][^angle]", names(ds2))
grep("(mean|std)[^Freq]|[^angle]", names(ds2))
grep([^Freq][^angle](mean|std)", names(ds2))
grep("[^Freq][^angle](mean|std)", names(ds2))
grep("[^Freq][^angle]mean", names(ds2))
grep("[^Freq][^angle]std", names(ds2))
grep("mean[^Freq][^angle]", names(ds2))
grep("[^Freq][^angle]mean", names(ds2))
grep("[^angle]", names(ds2))
grep("angle", names(ds2))
grep([^angle], names(ds2))
grep("[^angle]", names(ds2))
grep("^angle", names(ds2))
grep("[^angle]", names(ds2))
grep("[^angle()]", names(ds2))
grep("[^angle(]", names(ds2))
grep("mean", names(ds2))
View(ds3)
View(ds2)
rm(list = c("ds2","ds3"))
includemean <- grep("mean[^Freq],dataset)
includemean <- grep("mean[^Freq]",dataset)
includemean <- grep("mean[^Freq]",dataset)
includemean <- grep("mean[^Freq]",names(dataset))
includestd <- grep("std",names(dataset))
c(includemean, includestd)
inclusion<-c(includemean, includestd)
arrange(inclusion)
sort(inclusion)
inclusion<-sort(c(includemean, includestd))
ds2<-select(dataset, 1:2, inclusion)
View(ds2)
names(ds2)
datasetselect<-select(dataset, 1:2, inclusion)
View(datasetselect)
dataset_first <- select(dataset, 1:2, inclusion)
group_by(dataset_first, activity, subject)
z <- summarize(dataset_first, mean)
z <- summarize(dataset_first, mean())
z <- summarize(dataset_first, mean(dataset_first))
ungroup(dataset_first)
group_by(dataset_first, subject)
summarize(dataset_first, activity = mean(activity))
View(dataset_first)
summarise_all(dataset_first)
?summarize_all
summarise_all(dataset_first, mean)
dataset_first
ungroup(dataset_first)
group_by(dataset_first, subject, activity)
summarize_all(dataset_first, mean)
ungroup(dataset_first)
group_by(dataset_first, activity)
summarize_all(dataset_first, mean)
ungroup(dataset_first)
summarize_if(dataset_first, is.numeric, mean)
z<-summarize_if(dataset_first, is.numeric, mean)
View(z)
dataset_first<-group_by(dataset_first, subject, activity)
dataset_first
summarize_all(dataset_first, mean)
dataset_second <- summarize_all(dataset_first, mean)
View(dataset_second)
?aggregate
dsagg <- aggregate(dataset_first, c("subject,"activity), mean)
dsagg <- aggregate(dataset_first, c("subject","activity"), mean)
dsagg <- aggregate(dataset_first, list("subject","activity"), mean)
dsagg <- aggregate(dataset_first, list(c("subject","activity")), mean)
list("subject","activity")
dsagg <- aggregate(dataset_first, list("subject","activity"), mean)
dsagg <- aggregate(dataset_first, "subject", mean)
dsagg <- aggregate(dataset_first, list("subject"), mean)
dsagg <- aggregate(dataset_first, list(dataset_first$subject, dataset_first$activity), mean)
View(dsagg)
dsagg <- aggregate(dataset_first[,-c(1,2)], list(dataset_first$subject, dataset_first$activity), mean)
View(dsagg)
## Read in applicable files in base folder
activity_labels <- read.table("activity_labels.txt")
features <- read.table("features.txt")
## Read in test files from test folder
setwd("./test")
subject_test <- read.table("subject_test.txt")
x_test <- read.table("X_test.txt")
y_test <- read.table("y_test.txt")
setwd("..")
## Read in train files from train folder
setwd("./train")
subject_train <- read.table("subject_train.txt")
x_train <- read.table("X_train.txt")
y_train <- read.table("y_train.txt")
setwd("..")
## Rename variables to be descriptive
names(x_test) <- features[[2]]
names(x_train) <- features[[2]]
names(y_test) <- c("number")
names(y_train) <- c("number")
names(activity_labels) <- c("number", "activity")
names(subject_test) <- "subject"
names(subject_train) <- "subject"
## Bind all datasets together
y_test_labeled <- merge(y_test, activity_labels, by.x = "number", by.y = "number", sort = FALSE)
y_train_labeled <- merge(y_train, activity_labels, by.x = "number", by.y = "number", sort = FALSE)
test <- bind_cols(subject_test, y_test_labeled[2], x_test)
train <- bind_cols(subject_train, y_train_labeled[2], x_train)
dataset <- bind_rows(test, train)
## Select mean and std columns
includemean <- grep("mean[^Freq]",names(dataset))
includestd <- grep("std",names(dataset))
inclusion <- c(includemean, includestd)
dataset_first<-select(dataset, 1:2, inclusion)
## Create second dataset
dataset_second <- dataset_first %>% group_by(subject, activity)%>% summarize_all(mean)
View(dataset_first)
View(dataset_second)
